version: '3.8'
services:

  #
  # The reverse proxy runs over HTTPS so that it can deal with Mutual TLS when required:
  # - For authentication requests, Mutual TLS is terminated at the Identity Server
  # - For API requests, Mutual TLS is terminated at the gateway
  #
  reverse-proxy:
    image: nginx:1.19.5-alpine
    hostname: reverseproxy-internal.example.com
    ports:
      - 443:3000
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./reverse-proxy/alpine.ngx_curity_http_phantom_token_module_1.19.5.so:/usr/lib/nginx/modules/ngx_curity_http_phantom_token_module.so
      - ../certs/root.pem:/etc/nginx/certs/root.pem
      - ../certs/example.tls.pem:/etc/nginx/certs/example.tls.pem
      - ../certs/example.tls.key:/etc/nginx/certs/example.tls.key

  #  
  # The Identity Server runs over HTTPS inside the cluster
  # It is accessed externally at https://login.example.com over port 443
  #
  identity-server:
    image: curity.azurecr.io/curity/idsvr:6.4.2
    hostname: login-internal.example.com
    ports:
      - 6749:6749
    volumes:
     - ./idsvr/license.json:/opt/idsvr/etc/init/license/license.json
     - ./idsvr/config-backup.xml:/opt/idsvr/etc/init/config.xml
    environment:
      PASSWORD: Password1
      CURITY_EXAMPLE_ROOT_CA: "${CURITY_EXAMPLE_ROOT_CA}"

  #
  # The demo API runs over HTTP and validates JWTs that include a client certificate public key
  # It is accessed externally at https://api.example.com
  #
  api:
    image: mutual-tls-api:1.0.0
    hostname: api-internal.example.com
    volumes:
      - ../api/config.json:/usr/local/api/config.json
      - ../certs/root.pem:/usr/local/certs/root.pem
      - ../certs/example.tls.p12:/usr/local/certs/example.tls.p12
    environment:
      NODE_EXTRA_CA_CERTS: '/usr/local/certs/root.pem'
