user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

# Load the phantom token module when nginx starts
load_module modules/ngx_curity_http_phantom_token_module.so;
events {
    worker_connections  1024;
}
    
#
# All services are exposed using a single port of 443, and all traffic is streamed here first
#
stream {

    # For this host, stream directly to the internal Curity Identity Server
    upstream identity-server {
        server login-internal.example.com:8443;
    }
    
    # For this host, route to the following http block
    upstream api-server {
        server api.example.com:3001;
    }

    # Calculate the upstream based on pre-reading the host name 
    map $ssl_preread_server_name $upstream {
        login.example.com identity-server;
        default           api-server;
    }

    # Requests to https://login.example.com use TLS passthrough
    server {
        listen 3000;
        resolver 127.0.0.11;
        proxy_pass $upstream;
        ssl_preread on;
    }
}

#
# Requests to https://api.example.com terminate TLS at the reverse proxy
#
http {
    
    # Configure phantom token caching
    proxy_cache_path cache levels=1:2 keys_zone=api_cache:10m max_size=10g inactive=60m use_temp_path=off;
    
    server {
        
        server_name api.example.com;
        listen 3001 ssl;
        
        # Configure settings for verifying the Mutual TLS connection at the proxy
        ssl_certificate             /etc/nginx/certs/example.tls.pem;
        ssl_certificate_key         /etc/nginx/certs/example.tls.key;
        ssl_trusted_certificate     /etc/nginx/certs/root.pem;
        ssl_client_certificate      /etc/nginx/certs/root.pem;
        ssl_verify_client on;

        location ~ ^/ {

            # Use the Docker embedded DNS server
            resolver 127.0.0.11;

            # Configure the phantom token plugin so that opaque access tokens are introspected and sent to the API
            phantom_token on;
            phantom_token_client_credential 'introspect-client' 'Password1';
            phantom_token_introspection_endpoint curity;
            phantom_token_scopes 'transactions';

            # Also forward the Mutual TLS connection's client certificate public key to the API
            proxy_set_header x-example-client-public-key $ssl_client_escaped_cert;
            set $internal_api_hostname 'api-internal.example.com:3000';
            proxy_pass https://$internal_api_hostname$uri$is_args$args;
        }

        # Phantom token behavior
        location curity { 
            proxy_pass 'https://login-internal.example.com:8443/oauth/v2/oauth-introspect';
            proxy_cache_methods POST; 
            proxy_cache api_cache; 
            proxy_cache_key $request_body; 
            proxy_ignore_headers Set-Cookie; 
        }
    }
}
